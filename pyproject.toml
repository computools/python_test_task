[tool.poetry]
name = "coinmena_test_task"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.9"
uvicorn = "^0.15.0"
django = "^3.2.6"
psycopg2-binary = "^2.9.1"
pydantic = "^1.8.2"
httpx = "^0.20.0"
celery = "^5.1.2"
django_celery_beat = "^2.2.1"

[tool.poetry.dev-dependencies]
ipdb = "^0.13.9"
black = "21.7b0"
flake8 = "~3.8.4"
isort = "~5.5.5"
pytest = "^6.2.4"
pytest-django = "^4.4.0"
pytest-asyncio = "^0.15.1"
pytest-mock = "^3.6.1"
pytest-lazy-fixture = "0.6.3"
pytest-cov = "2.12.1"
pytest-xdist = "2.4.0"
mixer = "7.1.2"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
target-version = ['py38']
line-length = 120
exclude = '''
(
    \.venv
    | .+/migrations
)
'''

[tool.pytest.ini_options]
addopts = '-s -v --cache-clear --ds=config.settings --create-db'
cache_dir = '/tmp'
python_files = 'tests.py test_*.py *_test.py'
python_functions = 'test_* *_test'
filterwarnings = ['ignore::RuntimeWarning', 'ignore::UserWarning']

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
skip = '.venv,migrations'
src_paths = ['src/apps', 'src/config']

